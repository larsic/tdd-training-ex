//****************************************************************************
//Exercise 1
public static final void add(String numbers){
    String[] numbersArray = numbers.split(",");

    if (numbersArray.length > 2) {
        throw new RuntimeException("Up to 2 numbers separated by comma (,) are allowed");
    } else {
        for (String number : numbersArray) {
            Integer.parseInt(number); // If it is not a number, parseInt will throw an exception
        }
    }
}
//****************************************************************************

//****************************************************************************
//Exercise 2
public static final int add(String numbers){
    String[] numbersArray = numbers.split(",");

    if (numbersArray.length > 2) {
        throw new RuntimeException("Up to 2 numbers separated by comma (,) are allowed");
    } else {
        if(!"".equals(numbers)){
            for (String number : numbersArray) {
                Integer.parseInt(number);
            }
        }
    }
    return 0;
 }
//****************************************************************************

//****************************************************************************
//Exercise 3
public static final int add(String numbers){
    String[] numbersArray = numbers.split(",");
    int result = 0;

    if (numbersArray.length > 2) {
        throw new RuntimeException("Up to 2 numbers separated by comma (,) are allowed");
    } else {
        if(!"".equals(numbers)){
            for (String number : numbersArray) {
                result += Integer.parseInt(number);
            }
        }
    }

    return result;
}
//****************************************************************************

//****************************************************************************
//Exercise 4
public static final int add(String numbers){
    String[] numbersArray = numbers.split(",");
    int result = 0;

    /*
    if (numbersArray.length > 2) {
        throw new RuntimeException("Up to 2 numbers separated by comma (,) are allowed");
    } else {*/
        if(!"".equals(numbers)){
            for (String number : numbersArray) {
                result += Integer.parseInt(number);
            }
        }
    //}

    return result;
}
//****************************************************************************

//****************************************************************************
//Excercise 5
public static final int add(String delimiter, String numbers){
    String[] numbersArray = numbers.split(delimiter);
    int result = 0;

    if(!"".equals(numbers)){
        for (String number : numbersArray) {
            result += Integer.parseInt(number);
        }
    }

    return result;
}
//****************************************************************************

//****************************************************************************
//Exercise 6
public static final int add(String delimiter, String numbers){
    String[] numbersArray = numbers.split(delimiter + "|n");
    int result = 0;

    if(!"".equals(numbers)){
        for (String number : numbersArray) {
            result += Integer.parseInt(number);
        }
    }

    return result;
}
//****************************************************************************

//****************************************************************************
//Exercise 7
public static final int add(String delimiter, String numbers){
    String[] numbersArray = numbers.split(delimiter + "|n");
    String message = "Negative numbers are not allowed: ";
    String negatives = "";
    int result = 0;

    if(!"".equals(numbers)){
        for (String number : numbersArray) {
            Integer num = Integer.parseInt(number);
            if(num < 0){
                if(negatives.length() > 0){
                    negatives += ", ";
                }
                negatives += num;
            }
            result += Integer.parseInt(number);
        }
    }

    if(negatives.length() > 0){
        throw new RuntimeException("Negatives not allowed: [" + negatives + "]");
    }

    return result;
}
//****************************************************************************

//****************************************************************************
//Exercise 8
public static final int add(String delimiter, String numbers){
    String[] numbersArray = numbers.split(delimiter + "|n");
    String negatives = "";
    int result = 0;

    if(!"".equals(numbers)){
        for (String number : numbersArray) {
            Integer num = Integer.parseInt(number);
            if(num < 0){
                if(negatives.length() > 0){
                    negatives += ", ";
                }
                negatives += num;
            }
            else if(num < 1000) {
                result += Integer.parseInt(number);
            }
        }
    }

    if(negatives.length() > 0){
        throw new RuntimeException("Negatives not allowed: [" + negatives + "]");
    }

    return result;
}
//****************************************************************************

//****************************************************************************
//Exercise 9
public static final int add(String delimiter, String numbers){
    String[] numbersArray = numbers.split(delimiter + "|n");
    String negatives = "";
    int result = 0;

    if(!"".equals(numbers)){
        for (String number : numbersArray) {
            if(number.length() > 0) {
                Integer num = Integer.parseInt(number);
                if (num < 0) {
                    if (negatives.length() > 0) {
                        negatives += ", ";
                    }
                    negatives += num;
                } else if (num < 1000) {
                    result += Integer.parseInt(number);
                }
            }
        }
    }

    if(negatives.length() > 0){
        throw new RuntimeException("Negatives not allowed: [" + negatives + "]");
    }

    return result;
}
//****************************************************************************

//****************************************************************************
//Exercise 10
public class StringCalculatorSolution {
    /**
     * Method to calculate the sum of numbers in a given string
     */
    public static final int add(String delimiter, String numbers){
        String[] numbersArray = getNumbersArray(delimiter,numbers);
        String negatives = "";
        int result = 0;

        if(!"".equals(numbers)){
            for (String number : numbersArray) {
                if(number.length() > 0) {
                    Integer num = Integer.parseInt(number);
                    if (num < 0) {
                        if (negatives.length() > 0) {
                            negatives += ", ";
                        }
                        negatives += num;
                    } else if (num < 1000) {
                        result += Integer.parseInt(number);
                    }
                }
            }
        }

        if(negatives.length() > 0){
            throw new RuntimeException("Negatives not allowed: [" + negatives + "]");
        }

        return result;
    }

    /**
     * Splits de numbers for the given delimiters
     * @param delimiter - the delimiters
     * @param numbers - the numbers
     * @return an array with the numbers
     */
    private static String[] getNumbersArray(String delimiter, String numbers){
        String[] delimiterArray = delimiter.split("]\\[");
        String splitExpression = "";

        for(int i=0; i<delimiterArray.length;i++){
            if(!splitExpression.equals("")){
                splitExpression += "|";
            }

            splitExpression += delimiterArray[i].replaceAll("\\[|\\]","");
        }

        splitExpression += "|n";

        return  numbers.split(splitExpression);
    }
}
//****************************************************************************